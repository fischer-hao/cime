
./Tools/check_lockedfiles || exit -1

set CASEROOT		= `./xmlquery  CASEROOT		-value`

set BATCHQUERY		= `./xmlquery  BATCHQUERY	-value`
set BATCHSUBMIT		= `./xmlquery  BATCHSUBMIT	-value`
set BUILD_COMPLETE	= `./xmlquery  BUILD_COMPLETE	-value`
set RUNDIR		= `./xmlquery  RUNDIR		-value`

source $CASEROOT/env_mach_specific
if ($status != 0) then
   echo "Error: problem sourcing env_mach_specific"; exit -2
endif 

# following environment variables are currently needed by various mkbatch scripts
setenv MPILIB       `./xmlquery  MPILIB		-value`
setenv EXEROOT      `./xmlquery  EXEROOT	-value`

if ($BUILD_COMPLETE != "TRUE") then
  echo "BUILD_COMPLETE is not TRUE"
  echo "Please rebuild the model interactively"
  exit -2
endif

# BATCHQUERY is in env_run.xml
setenv LBQUERY "TRUE"
if !($?BATCHQUERY) then
  setenv LBQUERY "FALSE"
  setenv BATCHQUERY "undefined"
else if ( "$BATCHQUERY" == 'UNSET' ) then
  setenv LBQUERY "FALSE"
  setenv BATCHQUERY "undefined"
endif

# BATCHSUBMIT is in env_run.xml
setenv LBSUBMIT "TRUE"
if !($?BATCHSUBMIT) then
  setenv LBSUBMIT "FALSE"
  setenv BATCHSUBMIT "undefined"
else if ( "$BATCHSUBMIT" == 'UNSET' ) then
  setenv LBSUBMIT "FALSE"
  setenv BATCHSUBMIT "undefined"
endif

# --- Create and cleanup the timing directories---

if !(-d $RUNDIR) mkdir -p $RUNDIR || "cannot make $RUNDIR" && exit -1
if (-d $RUNDIR/timing) rm -r -f $RUNDIR/timing
mkdir $RUNDIR/timing
mkdir $RUNDIR/timing/checkpoints

# --- Determine time-stamp/file-ID string ---
setenv LID "`date +%y%m%d-%H%M%S`"

set sdate = `date +"%Y-%m-%d %H:%M:%S"`
echo "run started $sdate" >>& $CASEROOT/CaseStatus

